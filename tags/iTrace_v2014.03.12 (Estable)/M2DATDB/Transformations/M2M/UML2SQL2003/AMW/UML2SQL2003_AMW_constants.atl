-- @atlcompiler atl2006
-- @nsURI 		UML=http://www.eclipse.org/uml2/2.1.0/UML
-- @nsURI 		SQL2003=http://SQL2003.ecore
-- @path 		AMW=/UML2SQL2003/Metamodels/ORAnnotationMeta.ecore

--BEGIN DOC
--#About
-- @name 		UML2SQL2003_AMW_constants
-- @version		1.0
-- @domains		database, dsl, sql2003, mda, amw, transformation,
--				metamodel, model
-- @authors		Alejandro Galindo (Universidad Rey Juan Carlos)
-- @date       	24-03-2009
-- @description	Esta librería ATL contiene las constantes utilizadas
--				en el modelo de weaving en AMW asociado a decisiones tomadas
--              en las transformaciones realizadas desde un modelo conforme al 
--				metamodelo UML a otro conforme al estándar SQL:2003.
--END DOC

library UML2SQL2003_AMW_constants;

-- Dentro de las librerías de ATL no se permite definir atributos o constantes.
-- Entonces, las constantes hay que definirlas como helpers.


--BEGIN DOC
--#DESCRIPTION
--Constante que referencia al conjunto de los tipos primitivos
--del modelo de entrada.
--END DOC
helper def : ANNOTATED_MODEL_ELEMENTS() : Set(AMW!AnnotatedModelElement) = 
	AMW!AnnotatedModelElement.allInstances();

--BEGIN DOC
--#DESCRIPTION
--Constante con la clave que permite indicar en el modelo de weaving
--el tamaño de un tipo de dato de una propiedad del modelo de entrada.
--END DOC
helper def : KEY_SIZE()	: String = 'size';

--BEGIN DOC
--#DESCRIPTION
--Constante con la clave que permite indicar en el modelo de weaving
--una restricción sobre una propiedad del modelo de entrada.
--END DOC
helper def : KEY_RESTRICTION() : String = 'restriction';

--BEGIN DOC
--#DESCRIPTION
--Constante con la clave que permite indicar en el modelo de weaving
--si una propiedad derivada se debe transformar en un método o en un trigger.
--END DOC
helper def : KEY_DERIVED_ATTRIBUTE() : String = 'derived attribute';

--BEGIN DOC
--#DESCRIPTION
--Constante con la clave que permite indicar en el modelo de weaving
--el tipo de dato al que se debe transformar una propiedad multivaluada:
--un array o un multiset.
--END DOC
helper def : KEY_MULTIVALUED_ATTRIBUTE() : String = 'multivalued attribute';

--BEGIN DOC
--#DESCRIPTION
--Constante con la clave que permite indicar en el modelo de weaving
--el valor por defecto de una propiedad del modelo de entrada.
--END DOC
helper def : KEY_DEFAULT_VALUE() : String = 'default value';

--BEGIN DOC
--#DESCRIPTION
--Constante con la clave que permite indicar en el modelo de weaving
--si una jerarquía se va a mapear a una sola tabla o a varias.
--END DOC
helper def : KEY_HIERARCHY_MAPPING() : String = 'hierarchy';

--BEGIN DOC
--#DESCRIPTION
--Constante asociada al valor de la clave del modelo de weaving
--asociada a las propiedades multivaluadas que indica el uso de un array
--para el mapeo (colección de tamaño fijo).
--END DOC
helper def : VALUE_ARRAY() : String = 'array';

--BEGIN DOC
--#DESCRIPTION
--Constante asociada al valor de la clave del modelo de weaving
--asociada a las propiedades multivaluadas que indica el uso de un multiset
--para el mapeo (colección de tamaño variable).
--END DOC
helper def : VALUE_MULTISET() : String = 'multiset';

--BEGIN DOC
--#DESCRIPTION
--Constante asociada al valor de la clave del modelo de weaving
--asociada a las propiedades derivadas que indica el uso de un método
--para el mapeo.
--END DOC
helper def : VALUE_METHOD() : String = 'method';

--BEGIN DOC
--#DESCRIPTION
--Constante asociada al valor de la clave del modelo de weaving
--asociada a las propiedades derivadas que indica el uso de un trigger
--para el mapeo.
--END DOC
helper def : VALUE_TRIGGER() : String = 'trigger';

--BEGIN DOC
--#DESCRIPTION
--Constante asociada al valor de la clave del modelo de weaving
--asociada a las jerarquías de clases que indica que se va a transformar
--en una única tabla.
--END DOC
helper def : VALUE_MAP_TO_ONE_TABLE() : String = 'table';

--BEGIN DOC
--#DESCRIPTION
--Constante asociada al valor de la clave del modelo de weaving
--asociada a las jerarquías de clases que indica que se va a transformar
--en varias tablas.
--END DOC
helper def : VALUE_MAP_TO_SEVERAL_TABLES() : String = 'tables';

--BEGIN DOC
--#DESCRIPTION
--Constante asociada al valor de la clave del modelo de weaving
--asociada a las restricciones que indica que una propiedad es clave primaria
--de una clase.
--END DOC
helper def : VALUE_PRIMARY_KEY() : String = 'primary key';

--BEGIN DOC
--#DESCRIPTION
--Constante asociada al valor de la clave del modelo de weaving
--asociada a las restricciones que indica que una propiedad es clave 
--alternativa de una clase.
--END DOC
helper def : VALUE_ALTERNATIVE_KEY() : String = 'alternative key';

--BEGIN DOC
--#DESCRIPTION
--Constante asociada al valor de la clave del modelo de weaving
--asociada a las restricciones que indica que una propiedad no puede ser nula.
--END DOC
helper def : VALUE_NOTNULL_ATTRIBUTE() : String = 'not null';