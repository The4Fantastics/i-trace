library WSDLHelpersv1;

helper def: getNameTypeOfElement(i: Sequence(ASD!InfoType), name:String) : Sequence(ASD!InfoType) =
	if i->select(e| e.oclType()<> ASD!InfoTypeImported and e.refImmediateComposite().oclType()= ASD!ServiceDescription)->collect(e2|e2.name)->includes(name) then	
		i->select(e| e.oclType()<> ASD!InfoTypeImported and e.refImmediateComposite().oclType()= ASD!ServiceDescription and e.name = name)
	else 
		OclUndefined
	endif;
	
helper def: getParts(i: Sequence(ASD!InfoType)):Sequence(ASD!InfoType)=
	if i.size()>1 then
		thisModule.getPartsAux(i,Sequence{})
	else
		if i.size()=1 then
			thisModule.InfoType2Part(i)
		else
			OclUndefined
		endif
	endif;	

helper def: getPartsAux(orig:Sequence(ASD!InfoType), out: Sequence(ASD!InfoType)):Sequence(ASD!InfoType)=
	if orig.size()>1 then
		thisModule.getPartsAux(orig->excluding(orig->first()),out->union(Sequence{thisModule.InfoType2Part(orig->first())}))
	else
		if orig.size()=1 then
			out->union(Sequence{thisModule.InfoType2Part(orig)})
		else
			OclUndefined
		endif
	endif;

helper def: getPortTypeFault(i: Sequence(ASD!Message)):ASD!Message=
	if i.size()>1 then
		thisModule.getPortTypeFaultAux(i,Sequence{})
	else
		if i.size()=1 then
			thisModule.Message2PortTypeFault(i->first())
		else
			OclUndefined
		endif
	endif;	

helper def: getPortTypeFaultAux(orig:Sequence(ASD!Message), out: Sequence(ASD!Message)):Sequence(ASD!Message)=
	if orig.size()>1 then
		thisModule.getPortTypeFaultAux(orig->excluding(orig->first()),out->union(Sequence{thisModule.Message2PortTypeFault(orig->first())}))
	else
		if orig.size()=1 then
			out->union(Sequence{thisModule.Message2PortTypeFault(orig->first())})
		else
			OclUndefined
		endif
	endif;

helper def: getMinOccurs(i: String):String=
	if (i.split('-')->first()='?') then
		OclUndefined
	else
		i.split('-')->first()
	endif;

helper def: getMaxOccurs(i: String):Integer=
	if (i.split('-')->last()='?') then
		OclUndefined
	else
		i.split('-')->last()
	endif;