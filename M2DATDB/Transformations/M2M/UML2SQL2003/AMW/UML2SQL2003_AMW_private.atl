-- @atlcompiler atl2006
-- @nsURI 		UML=http://www.eclipse.org/uml2/2.1.0/UML
-- @nsURI 		SQL2003=http://SQL2003.ecore
-- @path 		AMW=/UML2SQL2003/Metamodels/ORAnnotationMeta.ecore

--BEGIN DOC
--#About
-- @name 		UML2SQL2003_AMW_private
-- @version		1.0
-- @domains		database, dsl, sql2003, uml, mda, amw, transformation,
--				metamodel, model
-- @authors		Alejandro Galindo (Universidad Rey Juan Carlos)
-- @date       	24-03-2009
-- @description	Esta librería ATL contiene los helpers privados utilizados
--				en el modelo de weaving en AMW asociado a decisiones tomadas
--              en las transformaciones realizadas desde un modelo conforme al 
--				metamodelo UML a otro conforme al estándar SQL:2003.
--END DOC

library UML2SQL2003_AMW_private;

-------------------------------------------------------------------------------
-- IMPORTS         ------------------------------------------------------------
-------------------------------------------------------------------------------

uses UML2SQL2003_AMW_constants;


-------------------------------------------------------------------------------
-- HELPERS         ------------------------------------------------------------
-------------------------------------------------------------------------------

--BEGIN DOC
--#DESCRIPTION
--Este helper indica si la anotación de entrada tiene algún elemento anotado.
--
--@CONTEXT AMW!Annotation
--@RETURN Boolean
--END DOC
helper context AMW!Annotation def : hasAnnotatedModelElement() : Boolean =
	not (self.getFirstAnnotatedModelElementOfAnnotation()->oclIsUndefined());


--BEGIN DOC
--#DESCRIPTION
--Este helper devuelve el primer elemento anotado de la anotación de entrada.
--
--@CONTEXT AMW!Annotation
--@RETURN AMW!AnnotatedModelElement
--END DOC
helper context AMW!Annotation def : getFirstAnnotatedModelElementOfAnnotation() : 
		AMW!AnnotatedModelElement =
			
	self.annotatedModelElement->first();


--BEGIN DOC
--#DESCRIPTION
--Este helper devuelve la primera propiedad del modelo de weaving
--cuya clave es la clave de entrada 'key', y que está incluida en la
--anotación de entrada.
--
--@CONTEXT AMW!Annotation
--@INPUTS String
--@RETURN AMW!Property
--END DOC
helper context AMW!Annotation def : getFirstProperty(key: String) :	AMW!Property =
	self.properties->select(prop | prop.key = key)->asSequence()->first();


--BEGIN DOC
--#DESCRIPTION
--Este helper indica si la clave de entrada 'key' está asociada a 
--alguna propiedad de la anotación de entrada en el modelo de weaving.
--
--@CONTEXT AMW!Annotation
--@INPUTS String
--@RETURNS Boolean
--END DOC
helper context AMW!Annotation def : hasProperty(key: String) : Boolean =
	not (self.getFirstProperty(key)->oclIsUndefined());


--BEGIN DOC
--#DESCRIPTION
--Este helper indica si la clave de entrada 'key' está asociada a 
--alguna propiedad de la anotación de entrada en el modelo de weaving,
--y su valor es 'value'.
--
--@CONTEXT AMW!Annotation
--@INPUTS String
--@INPUTS String
--@RETURNS Boolean
--END DOC
helper context AMW!Annotation def : hasPropertyAndValue(
		key: String, value: String) : Boolean =
	
	not (self.properties->select(prop |
		(prop.key = key) and (prop.value = value))->asSequence()->
			first()->oclIsUndefined());


--BEGIN DOC
--#DESCRIPTION
--Este helper devuelve el primer elemento anotado
--en el modelo de weaving asociado con el elemento 'NamedElement'.
--Si no hay ningún elemento anotado devuelve 'OclUndefined'.
--
--@CONTEXT UML!NamedElement
--@RETURN AMW!AnnotatedModelElement
--END DOC
helper context UML!NamedElement def : getFirstAnnotatedModelElement() : 
		AMW!AnnotatedModelElement =
			
	thisModule.ANNOTATED_MODEL_ELEMENTS()->asSequence()->
		select(ame | ame.element.ref = self.__xmiID__)->first();


--BEGIN DOC
--#DESCRIPTION
--Este helper indica si el elemento 'NamedElement' tiene algun
--elemento anotado (alguna referencia) en el modelo de weaving.
--
--@CONTEXT UML!NamedElement
--@RETURN Boolean
--END DOC
helper context UML!NamedElement def : hasAnnotatedModelElement() : Boolean =
	not (self.getFirstAnnotatedModelElement()->oclIsUndefined());


--BEGIN DOC
--#DESCRIPTION
--Este helper devuelve la primera anotación en el modelo de weaving asociada al
--elemento 'NamedElement'.
--
--@CONTEXT UML!NamedElement
--@RETURN AMW!Annotation
--#PRECONDITION
--El elemento de entrada tiene una anotación
--END DOC
helper context UML!NamedElement def : getAnnotation() : AMW!Annotation =
	self.getFirstAnnotatedModelElement().refImmediateComposite();


--BEGIN DOC
--#DESCRIPTION
--Dada una anotación del modelo de weaving,
--este helper devuelve el valor asociado a su clave 'key' de entrada.
--
--@CONTEXT AMW!Annotation
--@INPUTS String
--@RETURN String
--#PRECONDITION
--La anotación 'Annotation' tiene una propiedad con clave 'key'.
--END DOC
helper context AMW!Annotation def : getAnnotationValue(key: String) : String =
	self.getFirstProperty(key).value;


--BEGIN DOC
--#DESCRIPTION
--Este helper devuelve el valor de la propiedad de una anotación asociada
--a una restricción sobre la propiedad del modelo de entrada.
--
--@CONTEXT UML!Property
--@RETURN String
--@LIBRARIES UML2SQL2003_AMW_constants
--#PRECONDITION
--La propiedad 'Property' tiene una anotación con una propiedad cuya clave
--esta asociada a las restricciones sobre propiedades.
--END DOC
helper context UML!Property def : getRestrictionAnnotation() : String =
	self.getAnnotation().getAnnotationValue(thisModule.KEY_RESTRICTION());


--BEGIN DOC
--#DESCRIPTION
--Este helper devuelve el valor de la propiedad de una anotación asociada
--a una propiedad derivada del modelo de entrada.
--
--@CONTEXT UML!Property
--@RETURN String
--@LIBRARIES UML2SQL2003_AMW_constants
--#PRECONDITION
--La propiedad 'Property' tiene una anotación con una propiedad cuya clave
--esta asociada a las propiedades derivadas.
--END DOC
helper context UML!Property def : getDerivedAttributeAnnotation() : String =
	self.getAnnotation().getAnnotationValue(thisModule.KEY_DERIVED_ATTRIBUTE());


--BEGIN DOC
--#DESCRIPTION
--Este helper devuelve el valor de la propiedad de una anotación asociada
--a una propiedad multivaluada del modelo de entrada.
--
--@CONTEXT UML!Property
--@RETURN String
--@LIBRARIES UML2SQL2003_AMW_constants
--#PRECONDITION
--La propiedad 'Property' tiene una anotación con una propiedad cuya clave
--esta asociada a las propiedades multivaluadas.
--END DOC
helper context UML!Property def : getMultivaluedAttributeAnnotation() : String =
	self.getAnnotation().getAnnotationValue(thisModule.KEY_MULTIVALUED_ATTRIBUTE());


--BEGIN DOC
--#DESCRIPTION
--Este helper devuelve el valor de la propiedad de una anotación asociada
--al mapeo de la jerarquía de la clase del modelo de entrada.
--
--@CONTEXT UML!Class
--@RETURN String
--@LIBRARIES UML2SQL2003_AMW_constants
--#PRECONDITION
--La clase 'Class' tiene una anotación con una propiedad cuya clave
--esta asociada al mapeo de jerarquías de clases.
--END DOC
helper context UML!Class def : getHierarchyAnnotation() : String =
	self.getAnnotation().getAnnotationValue(thisModule.KEY_HIERARCHY_MAPPING());